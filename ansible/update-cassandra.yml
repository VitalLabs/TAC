---
# Perform a rolling update of the Cassandra configuration, one Cassandra host at a time.
#
# Notes:
#
# This is the general pattern for a rolling upgrade. We can add some sophistication here
# if we need to inform other components about Cassandra's state, or handle things like 
# balancing restarted nodes across racks or regions, etc. 
#
# The "nodetool drain" operation quiesces writes to that node in preparation for a restart.
# 
# The "serial: 1" setting controls how many nodes are restarted at a time. For large clusters,
# increase this.
#
- name: Upgrade Cassandra hosts
  hosts: tag_Name_{{environ|default('dev')}}_db:tag_Name_{{environ|default('dev')}}_db_seed
  remote_user: ubuntu
  sudo: true
  serial: 1

  vars_files:
  - "{{ lookup('env', 'HOME') }}/.ssh/switchboard_vars.yml"


  pre_tasks:
  - name: snapshot the cassandra host
    command: nodetool snapshot

  - name: drain the cassandra host
    command: nodetool drain

  # re-apply roles and any config changes
  roles:
  - db-dse

  post_tasks:
  - name: restart cassandra
    service: name=dse state=restarted

  - name: repair the cassandra host
    command: nodetool repair

  - name: repair the cassandra host
    command: nodetool rebuild

  - name: wait until cassandra comes back up
    wait_for: host={{ inventory_hostname }} port={{ cassandra_intermode_port }}

  - name: wait 60 seconds for the cluster negotiation to settle
    pause: minutes=1
