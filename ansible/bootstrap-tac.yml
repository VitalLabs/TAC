---
# Baseline Provisioning
- name: provision TAC instances
  hosts: tag_dev_tac_master
  remote_user: ubuntu
  sudo: yes

  vars_files:
  - group_vars/tag_dev_all_
  - group_vars/tag_TAC_all_

  tasks:
    - name: update system
      apt: upgrade=full update_cache=yes

    - name: install needed software
      apt: name={{ item }} state=installed update_cache=yes
      with_items:
        - auditd
        - xfsprogs
        - tree
        - r-base
        - python

    - name: create tac_workgroup
      group: name=tac_workgroup state=present
      tags:
        - workdir
        - users
        - groups

    - name: create working users ssh keys
      local_action: shell /usr/bin/ssh-keygen -n "{{ item.name }}" -f "{{ item.name }}.key" -N '' creates="{{ item.name }}.key"
      with_items: tac_work_users
      sudo: no
      tags:
        - users

    - name: create working users
      user: name="{{ item.name }}" state=present groups='tac_workgroup'
      with_items: tac_work_users
      tags:
        - users

    - name: ssh key for working users
      authorized_key: user="{{ item.name }}" key="{{ item.key }}"
      with_items: tac_work_users
      tags:
        - users
      
    - name: discover blockid of workdir device
      command: /sbin/blkid {{ tac_workdir_dev }}
      register: tac_workdir_blkid
      ignore_errors: yes
      tags:
        - workdir

    - name: discover blockid of ingress device
      command: /sbin/blkid {{ tac_ingress_dev }}
      register: tac_ingress_blkid
      ignore_errors: yes
      tags:
        - workdir

    - name: discover blockid of egress device
      command: /sbin/blkid {{ tac_egress_dev }}
      register: tac_egress_blkid
      ignore_errors: yes
      tags:
        - workdir

    - name: debug tac_workdir_blkid
      debug: msg="{{ tac_workdir_blkid }}"
      tags:
        - workdir
      
    - name: debug tac_ingress_blkid
      debug: msg="{{ tac_ingress_blkid }}"
      tags:
        - workdir
        
    - name: debug tac_egress_blkid
      debug: msg="{{ tac_egress_blkid }}"
      tags:
        - workdir
        
    - name: create workdir filesystem
      command: /sbin/mkfs -t xfs -L TACWORKSPACE {{ tac_workdir_dev }}
      when: tac_workdir_blkid['rc'] == 2
      tags:
        - workdir

    - name: create ingress filesystem
      command: /sbin/mkfs -t xfs -L TACINGRESS {{ tac_ingress_dev }}
      when: tac_ingress_blkid['rc'] == 2
      tags:
        - workdir

    - name: create egress filesystem
      command: /sbin/mkfs -t xfs -L TACEGRESS {{ tac_egress_dev }}
      when: tac_egress_blkid['rc'] == 2
      tags:
        - workdir

    - name: create fstab
      mount: name={{ tac_workdir_dir }} src='LABEL=TACWORKSPACE' fstype=xfs state=mounted
      tags:
        - workdir

    - name: create fstab
      mount: name={{ tac_ingress_dir }} src='LABEL=TACINGRESS' fstype=xfs state=mounted
      tags:
        - workdir

    - name: create fstab
      mount: name={{ tac_egress_dir }} src='LABEL=TACEGRESS' fstype=xfs state=mounted
      tags:
        - workdir

    - name: workdir mountpoint perms
      file: name={{ tac_workdir_dir }} owner=root group=tac_workgroup mode=1770 state=directory
      tags:
        - workdir

    - name: ingress mountpoint perms
      file: name={{ tac_ingress_dir }} owner=root group=tac_workgroup mode=1750 state=directory
      tags:
        - workdir

    - name: egress mountpoint perms
      file: name={{ tac_egress_dir }} owner=root group=tac_workgroup mode=1730 state=directory
      tags:
        - workdir

    - name: create templated audit rules
      template: src=templates/audit.rules.j2 dest=/etc/audit/audit.rules mode=0640 owner=root group=root
      tags:
        - workdir
      
    - name: restart machine
      command: shutdown -r now "Ansible updates triggered"
      async: 0
      poll: 0
      ignore_errors: true

    - name: waiting for server to come back
      local_action: wait_for host={{ inventory_hostname }} port={{ ansible_ssh_port }} state=started
      sudo: false
