---
#Create and config the VPC
- name: VPC create/config
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
  - vars/ec2.yml
  tasks:
  - name: Create the VPC 
    ec2_vpc: >
     state=present
     region="{{ ec2_region }}"
     ec2_access_key="{{ ec2_access_key }}"
     ec2_secret_key="{{ ec2_secret_key }}"
     cidr_block="{{ vpc_cidr_block }}"
     subnets="{{ vpc_subnets }}"
     internet_gateway="{{ vpc_internet_gateway|string }}"
     route_tables="{{ vpc_route_tables }}"
     wait=true
    register: vpc  

  - name: Write out a temporary file for mapping subnet to id
    template: src=templates/subnet_id.j2 dest=/tmp/subnet_id

  - name: Get the contents of subnet mapping file and set it as a fact
    set_fact:
      subnet_maps: "{{ lookup('file', '/tmp/subnet_id') }}"
  
#Provision some APP instances:
- name: stack internals
  hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
  - vars/ec2.yml
  tasks:
  - name: Launch instances
    ec2: >
     access_key="{{ ec2_access_key }}"
     secret_key="{{ ec2_secret_key }}"
     keypair="{{ ec2_keypair }}"
     group="{{ ec2_security_group }}"
     type="{{ ec2_instance_type }}"
     image="{{ ec2_image }}"
     region="{{ ec2_region }}"
     vpc_subnet_id="{{ item.id }}"
     instance_tags="{'name':'app', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}'}"
     count="{{ ec2_app_instance_count }}"
     wait=true
    register: ec2

  - name: Add new instance to host group
    local_action: add_host
      hostname="{{ item.public_ip }}"
      groupname=app
    with_items: ec2.instances

  - name: Wait for SSH to come up
    local_action: wait_for host={{ item.public_dns_name }}
      port=22 delay=60 timeout=320 state=started
    with_items: ec2.instances