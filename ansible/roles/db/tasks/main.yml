---
# tasks file for db

# DSE DEPLOYMENT

- name: configure the datastax enterprise repository
  apt_repository: repo="deb http://{{ dse_username }}:{{ dse_password }}@debian.datastax.com/enterprise stable main" state=present
  
- name: add dse repository key
  apt_key: url=https://debian.datastax.com/debian/repo_key state=present

- name: install DSE packages
  apt: pkg=dse-full state=installed force=yes
  notify:
    - restart dse

- name: configure cassandra
  template: src=cassandra.yml.j2 dest=/etc/dse/cassandra/cassandra.yaml 
  tags: datastax
  notify:
    - restart dse

- name: restart dse
  service: name=dse state=started enabled=yes

# DATOMIC DEPLOYMENT

- name: Create datomic user.
  user: name=datomic state=present

- name: Create datomic data directory
  file: state=directory path={{ datomic_data_dir }} owner=datomic group=datomic

- name: Make datomic log directory
  file: state=directory path=/var/log/datomic owner=datomic group=datomic
    
# Download and make current if necessary
- name: Check datomic installation
  command: "ls {{ datomic_dir }}/{{ datomic_filename }}"
  register: datomic_exists
  ignore_errors: true

- name: Create datomic directory
  file: state=directory path={{ datomic_dir }} owner=datomic group=datomic
  when: datomic_exists|failed

- name: Download datomic
  command: "chdir={{ datomic_dir }} wget --http-user=ian@vitalreactor.com --http-password={{ datomic_download_key }} https://my.datomic.com/repo/com/datomic/datomic-pro/{{ datomic_version }}/datomic-pro-{{ datomic_version }}.zip --no-check-certificate -O datomic-pro-{{ datomic_version }}.zip"
  when: datomic_exists|failed

- name: Unpack datomic
  command: chdir={{ datomic_dir }} unzip datomic-pro-{{ datomic_version }}.zip
  when: datomic_exists|failed

- name: datomic dir permissions
  shell: chown -R datomic:datomic {{ datomic_dir }}/{{ datomic_filename }}

- name: Link datomic
  file: src={{ datomic_dir }}/{{ datomic_filename }}
        dest={{ datomic_dir }}/current
        owner=datomic
        group=datomic
        state=link
  notify:
    - restart datomic

# DATOMIC CONFIGURE

# Configure distribution
- name: Upload datomic properties file
  template: src=transactor.properties.{{  datomic_protocol  }}.j2 dest={{ datomic_dir }}/transactor.properties owner=datomic group=datomic mode=0664
  notify:
    - restart datomic

# Deploy upstart    
- name: Upload datomic upstart config file
  template: src=datomic-upstart.conf.j2 dest=/etc/init/datomic.conf
    
- name: ensure datomic is run
  service: name=datomic state=started enabled=yes