---
# Install package dependencies
- name: use up to date nodejs repo
  apt_repository: repo=ppa:chris-lea/node.js state=present update_cache=yes
  sudo: true

- name: install nodejs/npm
  apt: name={{ item }} update_cache=yes state=latest
  with_items:
    - nodejs # includes npm
  sudo: true
  
- name: install node tools
  npm: name={{ item }} global=yes state=latest
  with_items:
    - grunt-cli
  sudo: true
  
# Make sure we can access the directories we need
- name: make sure we have access to the application log directory
  file: state=directory path="{{ clojure_app_log_dir }}" owner={{ clojure_app_user }} group=www-data
  sudo: true
  
  
- name: make sure our application repository exists
  file: state=directory path="{{ clojure_app_dir }}" owner={{ clojure_app_user }} group=www-data
  sudo: true
  
  
# Get application distribution
- debug: msg="Clojure Code Version {{ clojure_app_git_version }}"  

- name: get application repository {{ clojure_app_git_repo }}  {{ clojure_app_dir }} {{ clojure_app_git_version }}
  git: repo={{ clojure_app_git_repo }}
       dest={{ clojure_app_dir }}
       version={{ clojure_app_git_version }}
       update=yes
       accept_hostkey=true
  notify:
    - rebuild clojure assets
  tags: getcode
  sudo: false

- name: make {{ clojure_app_user }} the owner of the tree
  file: path={{ clojure_app_dir }} owner={{ clojure_app_user }} group=admin
        recurse=yes
  sudo: true


# Dev only 

- name: build the UI stylesheets
  command: "script/build-styles chdir={{ clojure_app_dir }}{{ clojure_app_root }}"


- name: build the application javascript
  command: "lein run -m script.build chdir={{ clojure_app_dir }}{{ clojure_app_root }}"
  tags: build_js
  sudo: false


- name: update the root html parameters
  template: src=config.js.j2
            dest="{{ clojure_app_dir }}{{ clojure_app_root }}/out/public/config.js"
            mode=644

              
# Upstart script for eval server at localhost:3000
- name: application upstart script
  sudo: true
  template: src=upstart.conf.j2
            dest="/etc/init/{{ clojure_app_name }}.conf"
            mode=0755
            
- name: start {{ clojure_app_name }} via leiningen
  sudo: true
  service: name={{ clojure_app_name }} state=running enabled=yes

