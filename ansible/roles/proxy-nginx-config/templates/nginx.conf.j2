#{{ ansible_managed }}

user              www-data;


worker_processes  {{ ansible_processor_count }};
pid        /var/run/nginx.pid;


events {
    worker_connections  {{ nginx_max_clients }};
}


http {
	upstream SwitchBoard {
		server ec2-204-236-170-60.us-west-1.compute.amazonaws.com:8080;
		#server 172.22.23.92:8100 max_fails=3 fail_timeout=120;
	}

	upstream Orchestra{
		server ec2-204-236-170-60.us-west-1.compute.amazonaws.com:3000;
	}

	server {
		listen 80;
		server_name {{ orchestra_vhost }};
		access_log /var/log/nginx/host.access.log;


		
		#all traffic not starting with VOServer will be routed to the instances in upstream "Orchestra"
		location / {

			proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
			proxy_pass http://Orchestra;
		}

		location ^~ /api/ {
			proxy_set_header X-Forwarded-Host $host;
      proxy_set_header X-Forwarded-Server $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
      add_header 'Access-Control-Allow-Methods' 'GET,POST,DELETE,OPTIONS';
			add_header 'Access-Control-Allow-Origin' "$http_origin";
			add_header 'Access-Control-Allow-Headers' 'Set-Cookie, Accept';
			add_header 'Access-Control-Expose-Headers' 'Set-Cookie, Accept';
			add_header 'Pragma' 'nocache';
			add_header 'Cache-Control' 'o-cache';
			add_header 'Expires' '0';
			proxy_cache off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_pass http://SwitchBoard;
		}
	} 
}



