#{{ ansible_managed }}

user              www-data;


worker_processes  {{ ansible_processor_count }};
pid        /var/run/nginx.pid;


events {
    worker_connections  {{ nginx_max_clients }};
}

error_log /var/log/nginx/host.error.log debug;




http {
	upstream SwitchBoard {
			#ip_hash;
	 	{% for host in groups['tag_Name_' + environ + '_app'] %}
	 	server {{ hostvars[host]['ec2_private_ip_address'] }}:{{ switchboard_port }};
    {% endfor %}
	}

	upstream Orchestra{
			#ip_hash;
	 	{% for host in groups['tag_Name_' + environ + '_app'] %}
	 	server {{ hostvars[host]['ec2_private_ip_address'] }}:{{ orchestra_port }} max_fails=3 fail_timeout=120s;
    {% endfor %}
	}

	server {
		 {% if ssl_deployssl %}
        listen 443;
    {% else %}
        listen 80;
    {% endif %}
		server_name {{ orchestra_vhost }};
		access_log /var/log/nginx/host.access.log;

		{% if ssl_deployssl %}
		  ssl on;
		  ssl_certificate /etc/ssl/certs/{{ ssl_certificate }};
		  ssl_certificate_key /etc/ssl/private/{{ ssl_key }};
    {% endif %}


 {% include "nginx-location-config.j2" %}
		
		# all traffic not starting with VOServer will be routed to the instances in upstream "Orchestra"
    # We do not fail on 404 errors for the static orchestra layer since thr probabilit of those is higher.
		location / {
			
			index {{ orchestra_default_page }};
			proxy_connect_timeout   10;
			proxy_send_timeout      {{ nginx_send_timeout }};
			proxy_read_timeout      {{ nginx_read_timeout }};
      proxy_next_upstream error timeout;
			proxy_set_header X-Forwarded-Host $host;
			proxy_set_header X-Forwarded-Server $host;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
			{% if proxy_allow_origin_header %}
		   add_header 'Access-Control-Allow-Origin' "$http_origin";
      {% endif %}
			proxy_pass http://Orchestra;
		}

	} 
}



