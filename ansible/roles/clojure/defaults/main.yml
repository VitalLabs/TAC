---
- name: use up to date nodejs repo
  apt_repository: repo=ppa:chris-lea/node.js state=present update_cache=yes
  sudo: true

- name: install nodejs/npm
  apt: name={{ item }} update_cache=yes state=latest
  with_items:
    - nodejs # includes npm
  sudo: true
  
- name: install node tools
  npm: name={{ item }} global=yes state=latest
  with_items:
    - grunt-cli
  sudo: true
  
# Make sure we can access the directories we need
- name: make sure we have access to the application log directory
  file: state=directory path="{{ app_log_dir }}" owner={{ app_user}} group=www-data
  sudo: true
  
- name: make sure our application repository exists
  file: state=directory path="{{ app_dir }}" owner={{ app_user }} group=www-data
  sudo: true
  
# Get application distribution
- name: get application repository
  git: repo={{ app_git_repo }}
       dest={{ app_dir }}
       version={{ app_git_version }}
       depth=1
       update=yes
  notify:
    - rebuild clojure assets
  tags: git_update

- name: make {{ app_user }} the owner of the tree
  file: path={{ app_dir }} owner={{ app_user }} group=admin
        recurse=yes
  sudo: true
  tags: git_update

- name: build the UI stylesheets
  command: "script/build-styles chdir={{ app_dir }}{{ app_root }}"
  tags: clojure-build

- name: build the application javascript
  command: "lein run -m script.build chdir={{app_dir}}{{ app_root }}"
  tags: clojure-build

- name: update the root html parameters
  template: src=config.js.j2
            dest="{{ app_dir }}{{ app_root }}/out/public/config.js"
            mode=644
  sudo: true
  tags: clojure-build
              
# Upstart script for eval server at localhost:3000
- name: application upstart script
  sudo: true
  template: src=upstart.conf.j2
            dest="/etc/init/{{ app_name }}.conf"
            mode=0755
  tags: clojure-launch
            
- name: start {{ app_name }} via leiningen
  sudo: true
  service: name={{ app_name }} state=running enabled=yes
  tags: clojure-launch
