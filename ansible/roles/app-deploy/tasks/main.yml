# Deploy github-based apps to immutant via source
---






- name: Create source directory
  file: state=directory path=/var/lib/immutant/current/archives owner={{ maven_user }}
  sudo: true


- name: Remove previous code 2
  file: path=/var/lib/immutant/current/archives/{{ switchboard_app_name }}
        state=absent
        recurse=yes
  sudo: true



# ================================================= 
# Development only to archive the files from source
# ================================================= 
- name: make sure permissions are appropriate for deployer to update
  file: path=/var/lib/immutant/current/archives/{{ switchboard_app_name }}
        recurse=yes
        owner=ubuntu
        group=ubuntu
        mode=775
  sudo: true
  ignore_errors: true
  when: switchboard_deployfrom_source == True
  


- debug: msg="Code Version {{ switchboard_git_version }}"  
- name: ensure up to date application source /var/lib/immutant/current/archives/{{ switchboard_app_name }}
  git: repo={{ clojure_app_git_repo }}
       dest=/var/lib/immutant/current/archives/{{ switchboard_app_name }}
       version={{ switchboard_git_version }}
       update=yes
       accept_hostkey=yes
  register: git_pull
  sudo: false
  when: switchboard_deployfrom_source == True


- name: make immutant the owner of the tree
  file: path=/var/lib/immutant/current/archives/{{ switchboard_app_name }}
        recurse=yes
        owner=ubuntu
        group=ubuntu
        mode=775
  sudo: true
  


- name: upload utility scripts for dealing with immutant
  template: >
    src=smoke-test-switchboard-api.sh.j2
    dest="/var/lib/immutant/current/jboss/bin/smoke-test-switchboard-api.sh"
    owner=ubuntu group=admin
    mode=755
  sudo: true

- name: upload utility scripts for dealing with swb deployments
  template: >
    src=check-is-app-deployed.sh.j2
    dest="/var/lib/immutant/current/jboss/bin/check-is-app-deployed.sh"
    owner=ubuntu group=admin
    mode=755
  sudo: true

- name: Create the immutant Archive .ima file
  environment:
    IMMUTANT_HOME: /var/lib/immutant/current
  command: "su ubuntu -c 'lein with-profile {{ switchboard_lein_profiles }} immutant archive  /var/lib/immutant/current/archives/{{ switchboard_app_name }}{{ switchboard_app_root }}'"
  ignore_errors: no
  sudo: true
  when: switchboard_deployfrom_source == True


# ================================================= 
# Staing/prod pull already built archive from S3 bucket
# ================================================= 
#/var/lib/immutant/current/archives/{{ switchboard_app_name }}{{ switchboard_app_root }}/target{{ switchboard_app_root }}.ima

- name: Create target directory
  file: path=/var/lib/immutant/current/archives/{{ switchboard_app_name }}{{ switchboard_app_root }}/target
        state=directory
  when: switchboard_deployfrom_source == False


- name: download immutant archive
  s3: aws_access_key={{ ec2_access_key }}
      aws_secret_key={{ ec2_secret_key }}
      mode=get
      bucket=vr-builds
      object=/switchboard/{{ switchboard_app_name }}-{{ switchboard_git_version}}.ima
      dest=/var/lib/immutant/current/archives/{{ switchboard_app_name }}{{ switchboard_app_root }}/target{{ switchboard_app_root }}.ima     
  when: switchboard_deployfrom_source == False


- name: create version file
  shell: echo "{{ switchboard_git_version}} - $(date)" > /var/lib/immutant/current/archives/{{ switchboard_app_name }}{{ switchboard_app_root }}/target/LATEST_VERSION
  when: switchboard_deployfrom_source == False



- name: Attempt to check if the deployed file is there
  shell: '/var/lib/immutant/current/jboss/bin/check-is-app-deployed.sh'
  register: is_swb_deployed

- name: get jboss pid to see if we need ot uninstall
  shell: '/var/lib/immutant/current/jboss/bin/check-jboss-pid.sh'
  ignore_errors: true
  register: jboss_pid_uninstall
  sudo: true


- name: Undeploy app by removing the file
  file: state=absent path=/var/lib/immutant/current/jboss/standalone/deployments/{{ switchboard_app_name }}.clj
  ignore_errors: true
  when: is_swb_deployed.stdout == "exist" and jboss_pid_uninstall.stdout != ""


- name: If is still undeploying then wait till its done
  wait_for: path=/var/lib/immutant/current/jboss/standalone/deployments/{{ switchboard_app_name }}.clj.undeployed timeout=720
  sudo: true
  ignore_errors: false
  when: is_swb_deployed.stdout == "exist" and jboss_pid_uninstall.stdout != ""

- name: gather ec2-specific facts
  action: ec2_facts
  environment: aws_creds
  
- debug: msg="System Groups {{ groups  }} "
- debug: msg="System  {{ groups['tag_'+environ|default('dev')+'_cassandra_']  }} || {{ hostvars[groups['tag_'+environ|default('dev')+'_cassandra_'][0]] }}"
 
- name: configure and install switchboard 
  template: src=deployment-descriptor.clj.j2 dest=/var/lib/immutant/current/jboss/standalone/deployments/{{ switchboard_app_name }}.clj
  sudo: true
  tags: datomic-conf


- name: Install app
  command: su ubuntu -c 'touch /var/lib/immutant/current/jboss/standalone/deployments/{{ switchboard_app_name }}.clj.dodeploy'
  sudo: true


# Cludgy immutant server handling
# note this restart is due to Clojure Permgen issue to be resolved wiht Clojure 1.6 
- name: stop immutant
  service: name=immutant state=stopped enabled=yes
  sudo: true

- name: wait to stop immutant
  sudo: true
  command: "sleep 30"

- name: get jboss pid
  shell: '/var/lib/immutant/current/jboss/bin/check-jboss-pid.sh'
  ignore_errors: true
  register: jboss_pid
  sudo: true

- debug: msg="jboss pid  reponse {{ jboss_pid  }}"

- name: check that jboss is shutting down properly and fail if not working
  shell: '/var/lib/immutant/current/jboss/bin/check-jboss-pid.sh'
  register: jboss_pid
  until: jboss_pid.stdout == ""
  retries: 30
  delay: 10
  changed_when: False
  ignore_errors: true

- name: If it hasnt shut down by now kill immutant and hope that data is not lost
  shell: '/var/lib/immutant/current/jboss/bin/kill-jboss.sh'
  ignore_errors: true
  register: jboss_pidkilled
  sudo: true

- name: If it hasnt shut down by now kill immutant and hope that data is not lost
  shell: '/var/lib/immutant/current/jboss/bin/check-jboss-pid.sh'
  ignore_errors: true
  register: jboss_pidkillfinal
  sudo: true

- debug: msg="jboss pid killed reponse {{ jboss_pidkillfinal  }} "

- fail: msg="Immutant is having major issues and cannto shutdown"
  when: jboss_pidkillfinal.stdout != ""


- name: start immutant
  service: name=immutant state=started enabled=yes
  sudo: true


- name: check API endpoint and fail if not working
  shell: '/var/lib/immutant/current/jboss/bin/smoke-test-switchboard-api.sh | grep "Authenticated"'
  register: smoke_test_response
  until: smoke_test_response.rc == 0
  retries: 60
  delay: 10
  changed_when: False
  tags: curltest
  when: switchboard_smoketest == True

