# Deploy github-based apps to immutant via source
---


  ###
- name: get the datomic master ip
  shell: >
    aws ec2 describe-instances --filters "Name=tag-key,Values=datomic_master" | grep PrivateIpAddress | awk '{print $2}' | sed s/\"//g | sed s/\,//g | grep -v "\[" | sort -u
  register: datomic_master_ip
  environment: aws_creds

##Deploy Dtomic Client needed for app.

- name: Check datomic installation
  command: "ls /home/{{ maven_user }}/.m2/repository/com/datomic/datomic-pro/{{ datomic_version }}"
  register: datomic_exists
  ignore_errors: true

- name: Create temp directory
  file: state=directory path=/tmp/datomic owner={{ maven_user }}
  sudo: true
  when: datomic_exists|failed

- name: Download datomic
  s3: bucket=vr-dist object=/archives/{{ datomic_filename }}.zip dest=/tmp/datomic/{{ datomic_filename }}.zip mode=get aws_access_key={{ ec2_access_key }} aws_secret_key={{ ec2_secret_key }}
  sudo: true
  ignore_errors: no
  when: datomic_exists|failed

- name: Unpack datomic
  command: chdir=/tmp/datomic unzip {{ datomic_filename }}.zip
  sudo: true
  when: datomic_exists|failed

- name: Local install to the maven_user repository
  command: su "{{ maven_user }}" -c 'bin/maven-install' chdir="/tmp/datomic/{{ datomic_filename }}"
  register: datomic_install
  sudo: true
  when: datomic_exists|failed

- name: Remove temp directory
  file: path=/tmp/datomic
        state=absent
        recurse=yes
  sudo: true
  when: datomic_install|success


  #Deploy App Code



# - name: make sure permissions are appropriate for deployer to update
#   file: path=/var/lib/immutant/applications/{{ switchboard_app_name }}
#         recurse=yes
#         owner=ubuntu
#         group=ubuntu
#         mode=775
#   sudo: true
#   ignore_errors: true


  
# - name: ensure up to date application source /var/lib/immutant/applications/{{ switchboard_app_name }}
#   git: repo={{ clojure_app_git_repo }}
#        dest=/var/lib/immutant/applications/{{ switchboard_app_name }}
#        version={{ clojure_app_git_version }}
#        depth=1
#        update=yes
#   register: git_pull


# - name: make immutant the owner of the tree
#   file: path=/var/lib/immutant/applications/{{ switchboard_app_name }}
#         recurse=yes
#         owner=ubuntu
#         group=ubuntu
#         mode=775
#   sudo: true

# # - name: deploy the application configuration file /var/lib/immutant/applications/{{ switchboard_app_name }}{{ switchboard_app_root }}/config/config-template.edn
# #   copy: src=/var/lib/immutant/applications/{{ switchboard_app_name }}{{ switchboard_app_root }}/config/config-template.edn   
# #         dest=/var/lib/immutant/applications/{{ switchboard_app_name }}{{ switchboard_app_root }}/config/config.edn
# #         owner=ubuntu
# #   sudo: true
  
# # Deploy to immutant
# - name: Deploy the application to the local immutant
#   environment:
#     IMMUTANT_HOME: /var/lib/immutant/current
#   command: "su ubuntu -c 'lein with-profile {{ switchboard_profiles }} immutant deploy --context-path {{ switchboard_context }}' chdir=/var/lib/immutant/applications/{{ switchboard_app_name }}{{ switchboard_app_root }}" # --virtual-host {{ switchboard_address }}
#   sudo: true




- name: Create source directory
  file: state=directory path=/var/lib/immutant/current/archives owner={{ maven_user }}
  sudo: true


  
- name: make sure permissions are appropriate for deployer to update
  file: path=/var/lib/immutant/current/archives/{{ switchboard_app_name }}
        recurse=yes
        owner=ubuntu
        group=ubuntu
        mode=775
  sudo: true
  ignore_errors: true


  
- name: ensure up to date application source /var/lib/immutant/current/archives/{{ switchboard_app_name }}
  git: repo={{ clojure_app_git_repo }}
       dest=/var/lib/immutant/current/archives/{{ switchboard_app_name }}
       version={{ clojure_app_git_version }}
       depth=1
       update=yes
  register: git_pull


- name: make immutant the owner of the tree
  file: path=/var/lib/immutant/current/archives/{{ switchboard_app_name }}
        recurse=yes
        owner=ubuntu
        group=ubuntu
        mode=775
  sudo: true





- name: Create the immutant Archive .ima file
  environment:
    IMMUTANT_HOME: /var/lib/immutant/current
  command: "su ubuntu -c 'lein with-profile {{ switchboard_profiles }} immutant archive  /var/lib/immutant/current/archives/{{ switchboard_app_name }}{{ switchboard_app_root }}'"
  ignore_errors: no
  sudo: true


- name: configure and install switchboard
  template: src=deployment-descriptor.clj.j2 dest=/var/lib/immutant/current/jboss/standalone/deployments/{{ switchboard_app_name }} 


# # Deploy to immutant - it takes a deployment descriptor that points to actual .ima file
# - name: Deploy the application to the local immutant
#   environment:
#     IMMUTANT_HOME: /var/lib/immutant/current
#   command: "su ubuntu -c 'lein with-profile {{ switchboard_profiles }} immutant deploy  /var/lib/immutant/current/archives/{{ switchboard_app_name }}{{ switchboard_app_root }}/target{{ switchboard_app_root }}.ima  --context-path {{ switchboard_context }} --virtual-host {{ switchboard_address }}'"
#   ignore_errors: no
#   sudo: true
  


