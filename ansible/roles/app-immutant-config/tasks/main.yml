---
# DEPLOY LEININGEN (SEPARATE ROLE?)

- name: Check leiningen installation
  command: "ls {{ lein_dir }}/lein"
  register: lein_exists
  ignore_errors: true

- name: leiningen dependencies
  apt: name={{ item }} state=latest
  sudo: true
  with_items:
    - maven
  when: lein_exists|failed
    
- name: get leiningen file
  get_url: url=https://raw.github.com/technomancy/leiningen/stable/bin/lein dest={{ lein_dir }}
  sudo: true
  when: lein_exists|failed

- name: leiningen needs execute permissions
  file: path={{ lein_dir }}/lein mode=0755
  sudo: true
  when: lein_exists|failed



- name: set umask for group write perms
  lineinfile: "dest=/home/ubuntu/.profile regexp='^umask' line='umask 002' insertbefore=BOF"
  sudo: true
  
- name: Create lein config directory
  file: state=directory path="/home/ubuntu/.lein" owner=ubuntu group=ubuntu
  sudo: true

- name: add the immutant plugin
  template: src=profiles.clj.j2
            dest="/home/ubuntu/.lein/profiles.clj"
            owner=ubuntu group=ubuntu
  sudo: true
  notify:
    - restart immutant


# DEPLOY IMMUTANT


# Create s3 bucket for Immutant cluster
- name: Create s3 bucket for Immutant deploy
  s3: aws_access_key={{ ec2_access_key }}
      aws_secret_key={{ ec2_secret_key }}
      mode=create
      bucket={{ immutant_cluster_bucket }}
      


# Run leiningen as Immutant user to install and run Immutant
- name: make immutant log directory
  file: state=directory path=/var/log/immutant
        owner=ubuntu group=admin
  sudo: true

- name: make immutant distribution directory
  file: state=directory path=/var/lib/immutant
        owner=ubuntu group=admin
        mode=775
  sudo: true

- name: make source-based application directory
  file: state=directory path=/var/lib/immutant/applications
        owner=ubuntu group=admin
        mode=775
  sudo: true
        
- name: is the target version of immutant installed?
  command: "ls /var/lib/immutant/releases/immutant-{{ immutant_version }}-slim"
  register: immutant_exists
  ignore_errors: true

- name: install immutant
  command: "su ubuntu -c 'lein immutant install {{ immutant_version }}'"
  sudo: true
  when: immutant_exists|failed

- name: configure immutant config
  template: >
    src=standalone.conf.j2
    dest="/var/lib/immutant/current/jboss/bin/standalone.conf"
    owner=ubuntu group=admin
    mode=664
  sudo: true

- name: upload utility scripts for deaking wiht immutant
  template: >
    src=kill-jboss.sh.j2
    dest="/var/lib/immutant/current/jboss/bin/kill-jboss.sh"
    owner=ubuntu group=admin
    mode=755
  sudo: true

- name: configure immutant
  template: >
    src=standalone-ha.xml.j2
    dest="/var/lib/immutant/current/jboss/standalone/configuration/standalone-ha.xml"
    owner=ubuntu group=admin
    mode=664
  sudo: true


- name: download newrelc zip
  s3: aws_access_key={{ ec2_access_key }}
      aws_secret_key={{ ec2_secret_key }}
      mode=get
      bucket={{ s3_bucket_third_party_libs }}
      object=/newrelic_agent3.5.0.zip
      dest=/var/lib/immutant/current/jboss/newrelic_agent3.5.0.zip


- name: Unpack newrelic
  command: chdir=/var/lib/immutant/current/jboss/ unzip -u newrelic_agent3.5.0.zip
  sudo: true


- name: Install newrelic
  command: chdir=/var/lib/immutant/current/jboss/newrelic java -jar newrelic.jar install
  sudo: true


- name: immutant upstart script
  template: >    
    src=immutant-upstart.conf.j2
    dest=/etc/init/immutant.conf
    mode=0755
  sudo: true



  
# Cludgy immutant server handling
# note this restart is due to Clojure Permgen issue to be resolved wiht Clojure 1.6 
- name: stop immutant
  service: name=immutant state=stopped enabled=yes
  sudo: true

- name: get jboss pid
  command: 'ps -ef | grep jboss\\\.home | grep -v grep | awk ''{print $2}'''
  ignore_errors: true
  register: jboss_pid
  sudo: true

- debug: msg="jboss pid 1 {{ jboss_pid  }} "

- name: sleep 30 seconds to let it shutdown
  wait_for: host={{ inventory_hostname }} port={{ switchboard_port }} state=stopped delay=720 timeout=740
  when: not "'ERROR' in jboss_pid.stderr"



- name: get jboss pid 2
  command: 'ps -ef | grep jboss\.home | grep -v grep | awk ''{print $2}'''
  ignore_errors: true
  register: jboss_pid2
  sudo: true

- debug: msg="jboss pid 2 {{ jboss_pid2  }} "

- name: stop immutant
  service: name=immutant state=stopped enabled=yes
  when: not "'ERROR' in jboss_pid2.stderr"
  sudo: true

- name: sleep 30 seconds to let it shutdown
  wait_for: host={{ inventory_hostname }} port={{ switchboard_port }} state=stopped delay=720 timeout=740
  when: not "'ERROR' in jboss_pid2.stderr"



- name: If it hasnt shut down by now kill immutant
  command: '/var/lib/immutant/current/jboss/bin/kill-jboss.sh'
  ignore_errors: true
  register: jboss_pidkill
  sudo: true


- debug: msg="jboss pid killed reponse {{ jboss_pidkill  }} "


- name: start immutant
  service: name=immutant state=started enabled=yes
  sudo: true

- name: wait until immutant comes back up, simple smoke test and to enforce rolling restart
  wait_for: host={{ inventory_hostname }} port={{ switchboard_port }} state=started delay=720 timeout=740





