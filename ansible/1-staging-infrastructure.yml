---
#Provision some instances:
- name: launch non-vpc instances
  hosts: localhost
  connection: local
  gather_facts: False


  tasks:


  - name: Include the variables specific to dev environment
    include_vars: envs/staging

  - name: Create security groups
    ec2_group:
      name: "{{ item.name }}"
      description: "{{ item.desc }}"
      rules: "{{ item.rules }}"
      region: "{{ ec2_region }}"
    with_items: security_groups

  - name: Launch instances
    ec2: 
      region: "{{ ec2_region }}"
      ec2_access_key: "{{ ec2_access_key }}"
      ec2_secret_key: "{{ ec2_secret_key }}"
      group: "{{ item.group }}"
      keypair: "{{ item.keypair }}"
      instance_type: "{{ item.instance_type }}"
      image: "{{ item.image }}"
      instance_tags: "{{ item.instance_tags }}"
      exact_count: "{{ item.exact_count }}"
      count_tag: "{{ item.count_tag }}"
      wait: true
    register: ec2
    with_items: ec2_instances

  - name: flush the EC2 inventory cache
    shell: rm -f ~/.ansible/tmp/ansible-ec2.cache ~/.ansible/tmp/ansible-ec2.index



- name: Wire Main Entry point nginx Proxy DNS Connections
  hosts: tag_Name_dev_proxy
  connection: local
  gather_facts: false
  tasks: 
 # - wait_for: host={{ hostvars[groups['tag_Name_dev_proxy'][0]]['ec2_ip_address'] }} port=22 delay=240
  - debug: msg="{{ hostvars[groups['tag_Name_dev_proxy'][0]]}}"


  - route53: >
      command=create
      zone={{ switchboard_zone }}
      record="{{ switchboard_vhost }}"
      type=A
      ttl=7200
      overwrite=true
      value="{{ hostvars[groups['tag_Name_dev_proxy'][0]]['ec2_ip_address'] }}"
    with_items: ec2.instances
    register: swb_dns
  - route53: >
      command=create
      zone={{ orchestra_zone }}
      record="{{ orchestra_vhost }}"
      type=A
      ttl=7200
      overwrite=true
      value="{{ hostvars[groups['tag_Name_dev_proxy'][0]]['ec2_ip_address'] }}"
    with_items: ec2.instances
    register: orchestra_dns
  tags: init,network



