# ansible-playbook create-eval.yml 
---
- name: Create Evaluation Security Group
  hosts: 127.0.0.1
  connection: local
  tasks:
    - local_action:
        module: ec2_group
        name: evaluation
        description: "Single-server evaluation exposes ports"
        region: us-east-1
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 443
            to_port: 443
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 3000
            to_port: 3000
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 8888
            to_port: 8888
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 5098
            to_port: 5099
            cidr_ip: 0.0.0.0/0
  tags: init,security
            
- name: Create Evaluation Instance
  hosts: 127.0.0.1
  connection: local
  roles:
    - role: ec2
      id: "eval5"        # ensure uniqueness
      type: "singleton" # unused
      group: "evaluation" # use for each dist type
      register_group: "tag_group_evaluation" # fake-out use of tags
      ncount: 1
  tags: init,instance

- name: Wire Evaluation DNS Connections
  hosts: 127.0.0.1
  connection: local
  gather_facts: false
  vars_files:
    - vars/eval.yml
  tasks: 
  - route53: >
      command=create
      zone=swb.io
      record="{{ switchboard_vhost }}"
      type=A
      ttl=7200
      overwrite=true
      value="{{ item.public_ip }}"
    with_items: ec2.instances
    register: swb_dns
  - route53: >
      command=create
      zone=orchestra.md
      record="{{ orchestra_vhost }}"
      type=A
      ttl=7200
      overwrite=true
      value="{{ item.public_ip }}"
    with_items: ec2.instances
    register: orchestra_dns
  tags: init,network

- name: wait for host to wake up
  hosts: 127.0.0.1
  connection: local
  tasks:
    - local_action: wait_for host={{ item.public_ip }} port=22 delay=5
      with_items: ec2.instances
  tags: init

- name: bring OS up to date
  hosts: tag_group_evaluation
  remote_user: ubuntu
  sudo: true
  tasks:
    - name: required packages
      apt: name={{ item }} state=latest update_cache=yes cache_valid_time=3600
      with_items:
        - python-apt
    - name: dist upgrade
      apt: upgrade=dist
      with_items: ec2.instances
    - name: reboot to make sure everything is fresh
      shell: /sbin/reboot &
      with_items: ec2.instances
  tags: init

# Don't wait for it to come up until it has gone down
- name: Dont configure until ready to go
  hosts: 127.0.0.1
  connection: local
  tasks:
    - name: wait for the server to go down (reboot)
      local_action: wait_for host={{ item.public_ip }} port=22 state=stopped
      with_items: ec2.instances
    - name: Wait for the server to wake back up
      local_action: wait_for host={{ item.public_ip }} port=22 delay=30
      with_items: ec2.instances
  tags: init
      
# Now, configure the node
#-------------------------------------
- include: eval.yml
